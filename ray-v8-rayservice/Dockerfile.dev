# ===============================================================
# Lightweight Development Dockerfile - Faster build, larger size
# Use this for quick testing, use main Dockerfile for production
# ===============================================================
FROM nvidia/cuda:12.1.0-cudnn8-runtime-ubuntu22.04

ARG PYTHON_VERSION=3.10

ENV DEBIAN_FRONTEND=noninteractive \
    PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    RAY_TMPDIR=/tmp/ray \
    VLLM_USE_V1=0 \
    TRANSFORMERS_CACHE=/app/cache \
    HF_HOME=/app/cache \
    PYTHONPATH=/app \
    LANG=C.UTF-8 \
    LC_ALL=C.UTF-8 \
    PIP_NO_CACHE_DIR=1

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    python${PYTHON_VERSION} \
    python3-pip \
    curl \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create python symlink
RUN ln -sf /usr/bin/python${PYTHON_VERSION} /usr/bin/python3 \
    && ln -sf /usr/bin/python3 /usr/bin/python

# Upgrade pip
RUN python -m pip install --no-cache-dir --upgrade pip==24.0

# Set working directory
WORKDIR /app

# Copy and install requirements
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Create directories
RUN mkdir -p /app/cache /tmp/ray /mnt/models

# Copy application code
COPY . /app/

# Expose ports
EXPOSE 8000 8265 6379

# Health check
HEALTHCHECK --interval=30s \
    --timeout=10s \
    --start-period=60s \
    --retries=3 \
    CMD curl -f http://localhost:8000/-/healthz || exit 1

# Default command
CMD ["python", "deploy_app.py", "model_config.yaml"]
